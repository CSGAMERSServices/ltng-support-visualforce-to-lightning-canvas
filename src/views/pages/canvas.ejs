<!DOCTYPE html>
<html>
<head>
	<title>Example connect page</title>
	<% include ../partials/lightningHeaders.ejs %>
</head>

<body>

<script type='text/javascript'>
	
	jsf = null;
	
	client = <%- JSON.stringify( USER_INFO.client ) %>;
	
	/**
	 * Handle the greeting from lightning
	 **/
	function handleGreeting(evt){
		console.log('heroku heard greeting');
		
		var message = 'Message from Lightning';
		if(evt && evt.message){
			message += ':' + evt.message;
		}

		document.getElementById('greeting').innerText = message;
	}

	Sfdc.canvas( function(){
		var loggedIn = Sfdc.canvas.oauth.loggedin();
		var token = "<%= TOKEN %>";
		var msgIn = Sfdc.canvas.byId( "msgIn" );
		var userInfo = <%- JSON.stringify( USER_INFO ) %>;
		var toastBtn = Sfdc.canvas.byId( "toastBtn" );
		var userInfoContext = Sfdc.canvas.byId( "userInfoContext" );
		
		//-- listen for events from salesforce
		// Sfdc.canvas.client.subscribe(request.client, [
		//	{name : 'mynamespace.statusChanged', onData : handler1}
		// ]);

		Sfdc.canvas.client.subscribe(client,[
			{name:'greeting', onData: handleGreeting}
		]);

		//debugger;
		
		try {
			userInfoContext.value = JSON.stringify( userInfo, null, 4 );
		} catch( err ){
			console.error( "unable to set user info context" ); console.error( err );
		}

		/*
		Can support queries on heroku using the connection through jsForce.
		(Or through back and forth postMessages)

		To leverage jsForce connections, you must add in a CORS address
		for the heroku endpoint.
		https://developer.salesforce.com/docs/atlas.en-us.api_rest.meta/api_rest/extend_code_cors.htm

		jsf = new jsforce.Connection({
			sessionId: "<%= TOKEN %>",
			serverUrl: "<%= INSTANCE_URL %>"
		});
		
		jsf.query ("select id, name from account limit 1", function( err, records ){
			console.log( "query returned" );
			if( !err ){
				console.log( records );
			}
			debugger;
		});
		*/
		
		toastBtn.onclick = function( evt ){
			console.log( 'toastBtn called' );
			
			var messageToSend = document.getElementById('messageText').value;
			if (!messageToSend) {
				messageToSend = document.getElementById('messageText').placeholder;
			}
			
			Sfdc.canvas.client.publish( client, { name:"showToast", payload: { status:"SUCCESS", message:messageToSend }});
		}
		
		msgIn.setAttribute( "value", "<%= SIGNED_REQUEST %>" );
	});
</script>

<!--
taken from
https://developer.salesforce.com/docs/atlas.en-us.platform_connect.meta/platform_connect/canvas_app_oauth_code_example.htm
jsf
https://jsforce.github.io/document/
-->

<div class='lds'>
	<div class='slds-grid'>
		<div class='slds-col slds-size_1-of-1 slds-p-around_small'>
			<h1 id='greeting' class='slds-text-heading_medium'>Hello - <%= USERNAME %>.</h1>
			<div class='datatable' style='padding:10px;'>
				<table class='slds-table slds-table--bordered slds-table--cell-buffer'>
					<thead>
						<tr class='slds-txt-title--caps'>
							<th scope='col'>
								<div class='slds-truncate' title='Name'>Name</div>
							</th>
							<th scope='col'>
								<div class='slds-truncate' title='Value'>Value</div>
							</th>
						</tr>
					</thead>
					<tbody>
						<tr>
							<td>userName</td><td><%= USER_INFO.context.user.userName %></td>
						</tr>
						<tr>
							<td>email</td><td><%= USER_INFO.context.user.email %></td>
						</tr>
					</tbody>
				</table>
			</div>
			<div class='slds-form--stacked'>
				<div class="slds-form-element">
					<label class="slds-form-element__label" for="msgIn">Your signed request</label>
					<div class="slds-form-element__control">
						<input type="text" id="msgIn" class="slds-input" placeholder="Message goes here" />
					</div>
				</div>
				<div class='slds-form-element'>
					<label class="slds-form-element__label" for="userInfoContext">Signed Request Contents</label>
					<div class="slds-form-element__control">
						<textarea id='userInfoContext' class='slds-textarea' style='height:300px' ></textarea>
					</div>
				</div>
				<div class='slds-form-element'>
					<label class="slds-form-element__label" for="messageText">Message to send to Lightning</label>
					<div class="slds-form-element__control">
						<textarea id='messageText' class='slds-input' placeholder="Hello <%= USER_INFO.context.user.firstName %>!" ></textarea>
					</div>
				</div>
				<div class='slds-form-element'>
					<button id='toastBtn' type='button' class='slds-button slds-button--brand'>Send Canvas Message</button>
				</div>
			</div>
		</div>
	</div>
</div>


</body>
</html>

